<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title><%= empresa.nome_empresa %> | Connect Skills</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100..900&display=swap" rel="stylesheet">
  <link rel="icon" type="image/png" href="/img/CONNECT.png?v=2">
  <style>
    body { background-color: #e9ecef; font-family: 'Montserrat', sans-serif; }
    .perfil-card { background: #fff; border-radius: 12px; box-shadow: 0 0 10px rgba(0,0,0,0.06); }
    .vaga-card { background: #fff; border-radius: 12px; box-shadow: 0 0 10px rgba(0,0,0,0.05); padding: 24px; }
    .preview-badge { position: sticky; top: 0; z-index: 1030; border-radius: 0; font-weight: 600; }
    .bloco-ia { margin-top: 1rem; margin-bottom: 2rem; }
    .resultados-ia { margin-top: 1rem; padding-bottom: 1rem; }
    .ia-header { display:flex; align-items:center; justify-content:space-between; gap:.75rem; position:sticky; top:0; background:#f8f9fa; padding:.25rem 0 .5rem; z-index:1; }
    .ia-footer { margin-top:2rem; padding-top:1rem; border-top:1px dashed #ddd; display:flex; justify-content:flex-end; }
  </style>
</head>
<body class="bg-light" data-pode-testar="<%= (typeof podeTestar !== 'undefined' && podeTestar) ? '1' : '0' %>">

  <% if (typeof include !== 'undefined') { %>
    <%- include('../partials/flash-messages') %>
  <% } %>

  <% const somentePreview = !(typeof podeTestar !== 'undefined' && podeTestar); %>
  <% if (somentePreview) { %>
    <div class="alert alert-warning text-center preview-badge mb-0">
      <i class="bi bi-eye"></i> Pré-visualização — entre como <strong>candidato</strong> para responder o questionário e ver sua compatibilidade.
      <a href="/login" class="alert-link ms-1">Fazer login</a>
    </div>
  <% } %>

  <main class="container py-5">
    <!-- Cabeçalho da empresa -->
    <div class="perfil-card p-4 mb-4">
      <div class="d-flex flex-column flex-md-row align-items-center">
        <img src="<%= empresa.foto_perfil || '/img/avatar.png' %>" class="rounded-circle me-md-4 mb-3 mb-md-0" alt="Foto da Empresa" width="100" height="100">
        <div>
          <h2><%= empresa.nome_empresa %></h2>
          <p class="mb-1"><%= empresa.descricao %></p>
          <%
            const normalizar = function(s){ return s ? s.normalize('NFD').replace(/[̀-ͯ]/g,'').toLowerCase().trim() : ''; };
            const partes = [empresa.cidade, empresa.estado, empresa.pais].filter(Boolean);
            const uniq = []; const seen = new Set();
            for (var i=0;i<partes.length;i++){ var p = partes[i]; var n = normalizar(p); if(!seen.has(n)){ seen.add(n); uniq.push(p.trim()); } }
            const localidade = uniq.join(', ');
          %>
          <p class="text-muted mb-0"><%= localidade || 'Localidade não informada' %></p>
          <small class="text-muted"><%= empresa.telefone || '' %></small>
        </div>
      </div>
    </div>

    <!-- Lista de vagas -->
    <h4 class="mb-3">Vagas Publicadas</h4>

    <% if (!vagasPublicadas || !vagasPublicadas.length) { %>
      <div class="alert alert-secondary">Nenhuma vaga publicada por esta empresa.</div>
    <% } else { %>
      <% var tipoMap = { Presencial:'Presencial', Home_Office:'Home Office', H_brido:'Híbrido' }; %>
      <% vagasPublicadas.forEach(function(vaga){ %>
        <div class="vaga-card mb-4" data-vaga-id="<%= vaga.id %>">
          <h5 class="fw-bold"><%= vaga.cargo %></h5>

          <% if (vaga.vaga_area && vaga.vaga_area.length > 0) { %>
            <p class="mb-1"><strong>Áreas de atuação:</strong>
              <%= vaga.vaga_area.map(function(v){ return v.area_interesse.nome; }).join(', ') %>
            </p>
          <% } %>

          <% if (vaga.tipo_local_trabalho || vaga.escala_trabalho) { %>
            <p class="mb-1">
              <% if (vaga.tipo_local_trabalho) { %><strong><%= tipoMap[vaga.tipo_local_trabalho] %></strong><br><% } %>
              <% if (vaga.escala_trabalho) { %>Escala: <%= vaga.escala_trabalho %><% } %>
            </p>
          <% } %>

          <% if (vaga.dias_presenciais || vaga.dias_home_office) { %>
            <p class="mb-1">
              <% if (vaga.dias_presenciais) { %>Dias presenciais: <%= vaga.dias_presenciais %><br><% } %>
              <% if (vaga.dias_home_office) { %>Dias home office: <%= vaga.dias_home_office %><% } %>
            </p>
          <% } %>

          <% if (vaga.salario) { %>
            <p class="mb-1">
              <strong>Salário:</strong>
              <%= Number(vaga.salario || 0).toLocaleString('pt-BR', { style: 'currency', currency: vaga.moeda || 'BRL' }) %>
            </p>
          <% } %>

          <% if (vaga.beneficio && vaga.beneficio.trim()) { %>
            <p class="mb-1"><strong>Benefícios:</strong>
              <%= vaga.beneficio.split(',').map(function(b){ return b.trim(); }).filter(Boolean).join(', ') %>
            </p>
          <% } %>

          <% if (vaga.beneficio_outro) { %>
            <p class="mb-1"><strong>Outro benefício:</strong> <%= vaga.beneficio_outro %></p>
          <% } %>

          <% if (vaga.descricao) { %>
            <p class="mb-1"><strong>Descrição:</strong> <%= vaga.descricao %></p>
          <% } %>

          <!-- Toggle do teste -->
          <div class="mt-3 text-end ia-toggle">
            <% if (somentePreview) { %>
              <button class="btn btn-outline-secondary fw-bold" disabled
                      data-bs-toggle="tooltip" data-bs-title="Entre como candidato para responder.">
                Iniciar teste com a IA
              </button>
              <a class="btn btn-primary ms-2" href="/login">Fazer login</a>
            <% } else { %>
              <button class="btn btn-outline-primary fw-bold botao-ia" type="button" aria-expanded="false">
                <%= (vaga.respostas_previas && vaga.respostas_previas.length) ? 'Ver teste da IA' : 'Iniciar teste com a IA' %>
              </button>
            <% } %>
          </div>

          <!-- Bloco IA -->
          <%
            var perguntas = String(vaga.pergunta || '').split('\n').map(function(s){ return s.trim(); }).filter(Boolean);
          %>
          <div class="border rounded p-3 bg-light bloco-ia" style="display:none;">
            <div class="ia-header">
              <div class="alert alert-secondary small mb-0 py-1 px-2"><strong>Questionário da vaga</strong></div>
            </div>

            <% if (perguntas.length) { %>
              <div class="mb-3 mt-2">
                <% perguntas.forEach(function(q, idx){ %>
                  <div class="mb-2">
                    <label class="form-label"><%= (idx + 1) + '. ' + q %></label>
                    <input type="text"
                           class="form-control resposta-ia-item"
                           placeholder="Sua resposta..."
                           value="<%= (vaga.respostas_previas && vaga.respostas_previas[idx]) ? vaga.respostas_previas[idx] : '' %>">
                  </div>
                <% }); %>
              </div>
            <% } else { %>
              <label class="form-label fw-semibold mt-2">Sua resposta:</label>
              <textarea class="form-control resposta-ia" rows="3" placeholder="Ex.: Sim, configuração de switches e roteadores."><%= vaga.resposta_unica || '' %></textarea>
            <% } %>

            <div class="d-flex gap-2 mt-3">
              <button class="btn btn-primary btn-avaliar" data-vaga-id="<%= vaga.id %>" <%= somentePreview ? 'disabled' : '' %>>
                Analisar compatibilidade
              </button>
              <span class="text-muted small status-ia" style="display:none;">Espere alguns segundos, a análise está sendo feita...</span>
            </div>

            <div class="mt-3 resultados-ia"></div>
            <div class="mt-3 msg-ja-avaliada alert alert-info py-2 px-3" style="display:none;">
              Você já realizou o teste desta vaga. Apenas a última avaliação é considerada no ranking.
            </div>

            <div class="ia-footer">
              <button class="btn btn-outline-secondary fechar-ia-baixo" type="button">Ocultar teste</button>
            </div>
          </div>
          <!-- /Bloco IA -->
        </div>
      <% }); %>
    <% } %>
  </main>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    (function(){
      var podeTestar = document.body.getAttribute('data-pode-testar') === '1';

      // Tooltips no modo preview
      if (!podeTestar) {
        document.addEventListener('DOMContentLoaded', function(){
          var els = document.querySelectorAll('[data-bs-toggle="tooltip"]');
          for (var i=0;i<els.length;i++){
            new bootstrap.Tooltip(els[i]);
          }
        });
        return; // nada mais para fazer se não pode testar
      }

      function keyVagaAvaliada(id) { return 'connectskills_vaga_avaliada_' + id; }

      // Abrir/fechar bloco IA
      document.addEventListener('click', function(e){
        var openBtn = e.target.closest('.botao-ia');
        if (openBtn) {
          var card = openBtn.closest('.vaga-card');
          var bloco = card.querySelector('.bloco-ia');
          var toggleWrap = card.querySelector('.ia-toggle');
          if (bloco){ bloco.style.display = 'block'; }
          if (toggleWrap){ toggleWrap.classList.add('d-none'); }
          openBtn.setAttribute('aria-expanded', 'true');
          return;
        }

        var closeBottom = e.target.closest('.fechar-ia-baixo');
        if (closeBottom) {
          var card2 = closeBottom.closest('.vaga-card');
          var bloco2 = card2.querySelector('.bloco-ia');
          var toggleWrap2 = card2.querySelector('.ia-toggle');
          var toggleBtn2 = card2.querySelector('.botao-ia');
          if (bloco2){ bloco2.style.display = 'none'; }
          if (toggleWrap2){ toggleWrap2.classList.remove('d-none'); }
          if (toggleBtn2) {
            var ja = localStorage.getItem(keyVagaAvaliada(card2.getAttribute('data-vaga-id'))) === '1';
            toggleBtn2.textContent = ja ? 'Ver teste da IA' : 'Iniciar teste com a IA';
            toggleBtn2.setAttribute('aria-expanded', 'false');
          }
          return;
        }
      });

      // Enviar respostas -> IA
      document.addEventListener('click', function(e){
        var btn = e.target.closest('.btn-avaliar');
        if (!btn) return;

        var card = btn.closest('.vaga-card[data-vaga-id]');
        var vagaId = card ? card.getAttribute('data-vaga-id') : null;
        if (!vagaId) return;

        if (localStorage.getItem(keyVagaAvaliada(vagaId)) === '1') {
          var msg = card.querySelector('.msg-ja-avaliada');
          if (msg) msg.style.display = 'block';
          return;
        }

        var container = btn.closest('.bloco-ia');
        var status = container.querySelector('.status-ia');
        var output = container.querySelector('.resultados-ia');
        var inputs = container.querySelectorAll('.resposta-ia-item');
        var textarea = container.querySelector('.resposta-ia');

        output.innerHTML = '';

        var payload = null;
        if (inputs && inputs.length) {
          var respostas = [];
          for (var i=0;i<inputs.length;i++){
            var v = (inputs[i].value || '').trim();
            respostas.push(v);
          }
          var temAlgo = false;
          for (var j=0;j<respostas.length;j++){
            if (respostas[j].length > 0){ temAlgo = true; break; }
          }
          if (!temAlgo) {
            output.innerHTML = '<div class="text-danger">Preencha ao menos uma resposta.</div>';
            return;
          }
          payload = { respostas: respostas };
        } else if (textarea) {
          var respTxt = (textarea.value || '').trim();
          if (!respTxt) {
            output.innerHTML = '<div class="text-danger">Digite sua resposta antes de analisar.</div>';
            return;
          }
          payload = { resposta: respTxt };
        } else {
          output.innerHTML = '<div class="text-danger">Não foi possível ler suas respostas.</div>';
          return;
        }

        btn.disabled = true;
        status.style.display = 'inline';

        fetch('/candidato/vaga/' + vagaId + '/avaliar', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        })
        .then(function(resp){ return resp.json().then(function(data){ return {http: resp, body: data}; }); })
        .then(function(pack){
          var resp = pack.http;
          var data = pack.body;
          status.style.display = 'none';

          if (resp.status === 401) {
            output.innerHTML = '<div class="text-danger">Entre com uma conta de candidato para realizar o teste.</div>';
            btn.disabled = false;
            return;
          }
          if (resp.status === 409) {
            output.innerHTML = '<div class="alert alert-info">Você já realizou o teste desta vaga.</div>';
            localStorage.setItem(keyVagaAvaliada(vagaId), '1');
            return;
          }

          if (!data || data.ok !== true) {
            btn.disabled = false;
            var errMsg = (data && data.error) ? data.error : 'Erro desconhecido.';
            output.innerHTML = '<div class="text-danger">' + errMsg + '</div>';
            return;
          }

          if (typeof data.score === 'number') {
            output.insertAdjacentHTML('afterbegin',
              '<div class="alert alert-info py-2 mb-3">' +
              '<strong>Sua compatibilidade geral:</strong> ' + data.score + '%<br>' +
              '<small class="text-muted">Sua participação foi registrada para o ranking.</small>' +
              '</div>'
            );
          }

          if (Array.isArray(data.results) && data.results.length) {
            var itens = '';
            for (var k=0;k<data.results.length;k++){
              var r = data.results[k];
              var itemTxt = String(r.Item || '').replace(/^Item\\s*\\d+:\\s*/i, '');
              var ratingTxt = (typeof r.rating === 'number') ? (r.rating + '%') : '-';
              itens += '<li class="list-group-item d-flex justify-content-between align-items-center">' +
                       '<span>' + itemTxt + '</span>' +
                       '<span class="badge bg-secondary rounded-pill">' + ratingTxt + '</span>' +
                       '</li>';
            }
            output.innerHTML += '' +
              '<div class="mt-2">' +
              '<div class="fw-semibold mb-1">Compatibilidade por opção</div>' +
              '<ul class="list-group">' + itens + '</ul>' +
              '</div>';
          } else {
            output.innerHTML += '<div class="text-muted">A IA não retornou itens para avaliar.</div>';
          }

          localStorage.setItem(keyVagaAvaliada(vagaId), '1');
          btn.classList.remove('btn-primary');
          btn.classList.add('btn-outline-secondary');
          btn.textContent = 'Teste já realizado';
          var msgJa = card.querySelector('.msg-ja-avaliada');
          if (msgJa) msgJa.style.display = 'block';
        })
        .catch(function(){
          status.style.display = 'none';
          btn.disabled = false;
          output.innerHTML = '<div class="text-danger">Falha ao contatar o serviço de análise. Tente novamente.</div>';
        });
      });
    })();
  </script>
</body>
</html>
